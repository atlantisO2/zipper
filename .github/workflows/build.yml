name: build

on:
  push:
    branches:
      - "master"
      - "main"
    tags:
      - "v*"
    paths-ignore:
      - '**.md'
      - '.github/workflows/docs.yaml'
      - 'docs/**'
      - 'mkdocs.yml'
  pull_request:
    branches:
      - "master"
      - "main"
    paths-ignore:
      - '**.md'
      - '.github/workflows/docs.yaml'
      - 'docs/**'
      - 'mkdocs.yml'

env:
  DOCKERHUB_SLUG: pratikimprowise/zipper

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ env.DOCKERHUB_SLUG }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=pr
            type=edge
          labels: |
            org.opencontainers.image.title=zipper
            org.opencontainers.image.base.name=scratch
            org.opencontainers.image.vendor=pratikbalar
            org.opencontainers.image.authors=pratikbalar
            org.opencontainers.image.licenses=Apache-2.0
            org.opencontainers.image.description=X MB zipper
            org.opencontainers.image.version={{version}}
            org.opencontainers.image.source=https://github.com/pratikbalar/zipper

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: pratikimprowise
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build artifacts
        uses: docker/bake-action@v1
        with:
          targets: artifact-all
          pull: true

      - name: Move artifacts
        run: |
          mv ./dist/**/* ./dist/

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: diun
          path: ./dist/*
          if-no-files-found: error

      - name: Build image
        uses: docker/bake-action@v1
        with:
          files: ${{ steps.meta.outputs.bake-file }}
          targets: image-all
          pull: true
          push: ${{ github.event_name != 'pull_request' }}

      - name: GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          files: |
            dist/*.tar.gz
            dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Scan for vulnerabilities
        continue-on-error: true
        uses: crazy-max/ghaction-container-scan@master
        with:
          image: ${{ env.DOCKERHUB_SLUG }}:edge
          annotations: true
